name: Deploy to Production Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests'
        required: false
        default: 'false'
        type: boolean

# Environment variables moved to secrets for security

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_tests }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'success' || inputs.skip_tests)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts
        
    - name: Create deployment backup
      run: |
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH }}
          
          # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
          BACKUP_DIR="/opt/backups/$(date +%Y%m%d_%H%M%S)"
          mkdir -p "$BACKUP_DIR"
          
          if [ -f "data/cleaning_service_stable.db" ]; then
            cp data/cleaning_service_stable.db "$BACKUP_DIR/"
          fi
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é Git
          git rev-parse HEAD > "$BACKUP_DIR/previous_commit.txt" 2>/dev/null || echo "unknown" > "$BACKUP_DIR/previous_commit.txt"
          
          echo "BACKUP_DIR=$BACKUP_DIR" > /tmp/backup_info.txt
        EOF
        
    - name: Deploy application
      run: |
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        rsync -avz --delete -e "ssh -i ~/.ssh/id_ed25519" \
          --exclude='.git' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.env' \
          --exclude='data/' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.DEPLOY_PATH }}/
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH }}
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –¥–ª—è GitHub
          mkdir -p ~/.ssh
          echo "${{ secrets.GITHUB_SSH_KEY }}" > ~/.ssh/github_key
          chmod 600 ~/.ssh/github_key
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH config –¥–ª—è GitHub
          cat > ~/.ssh/config << 'SSH_CONFIG'
          Host github.com
            HostName github.com
            User git
            IdentityFile ~/.ssh/github_key
            IdentitiesOnly yes
          SSH_CONFIG
          
          # –û–±–Ω–æ–≤–ª—è–µ–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
          git fetch origin main
          git reset --hard origin/main
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "Deploying commit: $CURRENT_COMMIT"
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          docker-compose -f docker-compose.stable.yml down
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã
          docker-compose -f docker-compose.stable.yml up -d --build
          
          # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
          sleep 30
          
          # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
          echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
          docker-compose -f docker-compose.stable.yml exec -T cleaning_service_api_stable alembic upgrade head
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          if ! docker-compose -f docker-compose.stable.yml ps | grep -q "Up"; then
            echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å!"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API
          for i in {1..10}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "‚úÖ API –∑–¥–æ—Ä–æ–≤!"
              break
            fi
            echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ API... ($i/10)"
            sleep 10
          done
          
          if ! curl -f http://localhost:8000/health > /dev/null 2>&1; then
            echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ 100 —Å–µ–∫—É–Ω–¥!"
            exit 1
          fi
          
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo "COMMIT: $CURRENT_COMMIT"
        EOF
        
    - name: Health check
      run: |
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
        for i in {1..5}; do
          if curl -f http://${{ secrets.SERVER_HOST }}:8000/health > /dev/null 2>&1; then
            echo "‚úÖ –í–Ω–µ—à–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!"
            exit 0
          fi
          echo "‚è≥ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞... ($i/5)"
          sleep 10
        done
        
        echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Å–Ω–∞—Ä—É–∂–∏!"
        exit 1
        
    - name: Rollback on failure
      if: failure()
      run: |
        echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç..."
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH }}
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
          docker-compose -f docker-compose.stable.yml down
          
          # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
          BACKUP_DIR=$(find /opt/backups -type d -name "*" | sort | tail -1)
          if [ -d "$BACKUP_DIR" ] && [ -f "$BACKUP_DIR/cleaning_service_stable.db" ]; then
            cp "$BACKUP_DIR/cleaning_service_stable.db" data/
            echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
          fi
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é
          docker-compose -f docker-compose.stable.yml up -d
          
          echo "üîÑ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"
        EOF
        
    - name: Deployment summary
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üöÄ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo "üìä –°—Ç–∞—Ç—É—Å: ‚úÖ –£—Å–ø–µ—Ö"
        else
          echo "‚ùå –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!"
          echo "üìä –°—Ç–∞—Ç—É—Å: ‚ùå –û—à–∏–±–∫–∞"
        fi
